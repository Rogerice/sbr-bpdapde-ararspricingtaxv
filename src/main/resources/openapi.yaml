openapi: 3.0.1
info:
  title: Offer and Pricing Service
  description: Responsible for managing fixed income investment operations, searching for offers and rates
  version: 1.0.0
  contact:
    email: "X311187@prservicos.com.br"
  license:
    name: "Apache"
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: /bp_offer_pricing
tags:
  - name: Offers and Rates
    description: Self-Issued Fixed Income Investment products
paths:
  /offers:
    post:
      tags:
        - Offers and Rates
      summary: "Fetches investment offers and associated fees for fixed income products, returning combined data."
      description: "This endpoint retrieves offers and their associated fees. The returned data is combined to provide a complete view of available investment options based on customer and market segment."
      requestBody:
        description: "Data to be received for retrieving offers and fees"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffersPricingRequest'
        required: true
      responses:
        '200':
          description: "Successful retrieval of offers and fees"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapper'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '503':
          description: "Service Unavailable."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                errors:
                  - code: "ERR007"
                    message: "Service unavailable"
                    level: "error"
                    description: "The service is temporarily unavailable."
        '504':
          description: "Gateway timeout."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
              example:
                errors:
                  - code: "ERR008"
                    message: "Gateway timeout"
                    level: "error"
                    description: "The request timed out while waiting for a response."
components:
  schemas:
    OffersPricingRequest:
      type: object
      required:
        - documentType
        - customerId
        - documentNumber
      properties:
        documentType:
          type: string
          description: "Document type."
          example: "CPF"
        customerId:
          type: string
          description: "Customer ID."
          example: "123456"
        documentNumber:
          type: string
          description: "Document number."
          example: "34034505445"
        segment:
          type: string
          description: "Customer market segment."
          example: "12"
        channel:
          type: string
          description: "Request channel."
          example: "77"
        centerId:
          type: string
          description: "Center ID (Agency)."
          example: "0025"
        productFamily:
          type: string
          description: "Product family name (e.g., CDB)."
          example: "CDB"
        indicatorRecall:
          type: string
          description: "Indicator of realization (Indicador de Rechamada)."
          example: "Y"
        cdRecall:
          type: string
          description: "Real product code (Código do Produto da Rechamada)."
          example: "26"
        subProductRecall:
          type: string
          description: "Real subproduct code (Código do Subproduto da Rechamada)."
          example: "0103"
        funcType:
          type: string
          description: "Type of functionality for Application or Rescue"
          example: "R"
        subProduct:
          type: string
          description: "By-product chosen in the offer"
          example: "LCI - Invest"
    OffersPricingResponse:
      type: object
      properties:
        id:
          type: string
          description: "Offer identifier."
          example: "2a6777effe8f5b8c2df74a49dae5f98d"
        product:
          type: string
          description: "Product name."
          example: "26"
        productDescription:
          type: string
          description: "Description of the product."
          example: "RENDA FIXA"
        familyCode:
          type: string
          description: "Family code of the product."
          example: "LCA"
        channelCode:
          type: string
          description: "Channel code."
          example: "52"
        cdSegm:
          type: string
          description: "Segment code."
          example: "ALL"
        tpSegm:
          type: string
          description: "Segment type."
          example: "ALL"
        subProducts:
          type: array
          items:
            $ref: '#/components/schemas/SubProductDetails'
    ResponseWrapper:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OffersPricingResponse'
          description: "List of offers and pricing responses"
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          description: "List of errors"
          example: []
    SubProductDetails:
      type: object
      properties:
        sub_product:
          type: string
          description: "Subproduct name."
          example: "LCA SEL 361 DIG DIAS"
        sub_code:
          type: string
          description: "Subproduct code."
          example: "0232"
        minimum_application_value:
          type: number
          format: float
          description: "Minimum application value."
          example: 1000
        minimum_redeem_value:
          type: number
          format: float
          description: "Minimum redeem value."
          example: 500
        minimum_balance_value:
          type: number
          format: float
          description: "Minimum balance value."
          example: 1000
        progressive_remuneration_indicator:
          type: string
          description: "Indicator if progressive remuneration is applied."
          example: "N"
        indexer_description:
          type: string
          description: "Description of the indexer."
          example: "CDI"
        grace_indicator:
          type: string
          description: "Grace period indicator."
          example: "N"
        grace_term:
          type: string
          description: "Grace period term."
          example: "99999"
        other_term:
          type: string
          description: "Other term indicator."
          example: "S"
        redeem_indicator:
          type: string
          description: "Redeem indicator."
          example: "S"
        future_schedule:
          type: string
          description: "Future schedule indicator."
          example: "S"
        online_hour:
          type: string
          description: "Online hour information."
          example: "20:10:00"
        rate_details:
          type: array
          items:
            $ref: '#/components/schemas/RateDetails'
    RateDetails:
      type: object
      properties:
        tax_rate:
          type: string
          description: "Encoded tax rate, typically a string representing basis points."
          example: "00268000"
        tax_rate_description:
          type: string
          description: "Human-readable tax rate description."
          example: "2,68% a.a."
        received_tax_rate:
          type: string
          description: "Received tax rate from an external service."
          example: "00700000"
    Errors:
      type: object
      description: "Data structure containing the details for errors."
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          description: "Array of errors."
    Error:
      type: object
      description: "Data structure containing the error details."
      required:
        - code
        - message
        - level
      properties:
        code:
          type: string
          description: "Unique alphanumeric human-readable error code."
          example: "ERR001"
        message:
          type: string
          description: "Brief summary of the reported issue."
          example: "Invalid Action"
        level:
          type: string
          description: "Level of the reported issue."
          enum:
            - info
            - warning
            - error
          example: "error"
        description:
          type: string
          description: "Detailed description of the reported issue."
          example: "The request parameter is invalid."
  responses:
    NoContent:
      description: "No content."
    Unauthorized:
      description: "Unauthorized."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          example:
            errors:
              - code: "ERR002"
                message: "Unauthorized access"
                level: "error"
                description: "You do not have permission to access this resource."
    Forbidden:
      description: "Forbidden."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          example:
            errors:
              - code: "ERR003"
                message: "Forbidden access"
                level: "error"
                description: "Access to this resource is forbidden."
    BadRequest:
      description: "Bad Request."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          example:
            errors:
              - code: "ERR004"
                message: "Invalid request"
                level: "error"
                description: "The request parameters are invalid."
    NotFound:
      description: "Not Found."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          example:
            errors:
              - code: "ERR005"
                message: "Resource not found"
                level: "error"
                description: "The requested resource was not found."
    InternalServerError:
      description: "Server Error."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          example:
            errors:
              - code: "ERR006"
                message: "Internal server error"
                level: "error"
                description: "An unexpected error occurred on the server."
    ServiceUnavailable:
      description: "Service Unavailable."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          example:
            errors:
              - code: "ERR007"
                message: "Service unavailable"
                level: "error"
                description: "The service is temporarily unavailable."
    GatewayTimeout:
      description: "Gateway timeout."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
          example:
            errors:
              - code: "ERR008"
                message: "Gateway timeout"
                level: "error"
                description: "The request timed out while waiting for a response."